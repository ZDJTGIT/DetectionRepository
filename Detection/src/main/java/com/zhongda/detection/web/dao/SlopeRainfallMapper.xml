<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhongda.detection.web.dao.SlopeRainfallMapper">
  <resultMap id="BaseResultMap" type="com.zhongda.detection.web.model.SlopeRainfall">
    <id column="rainfall_id" jdbcType="INTEGER" property="rainfallId" />
    <result column="detection_id" jdbcType="INTEGER" property="detectionId" />
    <result column="sensor_id" jdbcType="INTEGER" property="sensorId" />
    <result column="detection_data" jdbcType="REAL" property="detectionData" />
    <result column="detection_time" jdbcType="TIMESTAMP" property="detectionTime" />
    <result column="sensor_status" jdbcType="VARCHAR" property="sensorStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    rainfall_id, detection_id, sensor_id, detection_data, detection_time, sensor_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from slope_rainfall
    where rainfall_id = #{rainfallId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from slope_rainfall
    where rainfall_id = #{rainfallId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhongda.detection.web.model.SlopeRainfall">
    insert into slope_rainfall (rainfall_id, detection_id, sensor_id, 
      detection_data, detection_time, sensor_status
      )
    values (#{rainfallId,jdbcType=INTEGER}, #{detectionId,jdbcType=INTEGER}, #{sensorId,jdbcType=INTEGER}, 
      #{detectionData,jdbcType=REAL}, #{detectionTime,jdbcType=TIMESTAMP}, #{sensorStatus,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhongda.detection.web.model.SlopeRainfall">
    insert into slope_rainfall
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rainfallId != null">
        rainfall_id,
      </if>
      <if test="detectionId != null">
        detection_id,
      </if>
      <if test="sensorId != null">
        sensor_id,
      </if>
      <if test="detectionData != null">
        detection_data,
      </if>
      <if test="detectionTime != null">
        detection_time,
      </if>
      <if test="sensorStatus != null">
        sensor_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rainfallId != null">
        #{rainfallId,jdbcType=INTEGER},
      </if>
      <if test="detectionId != null">
        #{detectionId,jdbcType=INTEGER},
      </if>
      <if test="sensorId != null">
        #{sensorId,jdbcType=INTEGER},
      </if>
      <if test="detectionData != null">
        #{detectionData,jdbcType=REAL},
      </if>
      <if test="detectionTime != null">
        #{detectionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sensorStatus != null">
        #{sensorStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhongda.detection.web.model.SlopeRainfall">
    update slope_rainfall
    <set>
      <if test="detectionId != null">
        detection_id = #{detectionId,jdbcType=INTEGER},
      </if>
      <if test="sensorId != null">
        sensor_id = #{sensorId,jdbcType=INTEGER},
      </if>
      <if test="detectionData != null">
        detection_data = #{detectionData,jdbcType=REAL},
      </if>
      <if test="detectionTime != null">
        detection_time = #{detectionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sensorStatus != null">
        sensor_status = #{sensorStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where rainfall_id = #{rainfallId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhongda.detection.web.model.SlopeRainfall">
    update slope_rainfall
    set detection_id = #{detectionId,jdbcType=INTEGER},
      sensor_id = #{sensorId,jdbcType=INTEGER},
      detection_data = #{detectionData,jdbcType=REAL},
      detection_time = #{detectionTime,jdbcType=TIMESTAMP},
      sensor_status = #{sensorStatus,jdbcType=VARCHAR}
    where rainfall_id = #{rainfallId,jdbcType=INTEGER}
  </update>
</mapper>