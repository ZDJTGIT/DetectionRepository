<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhongda.detection.web.dao.RoleMapper">
	<resultMap id="BaseResultMap" type="com.zhongda.detection.web.model.Role">
		<id column="role_id" jdbcType="INTEGER" property="roleId" />
		<result column="role_name" jdbcType="VARCHAR" property="roleName" />
		<result column="role_sign" jdbcType="VARCHAR" property="roleSign" />
		<result column="role_description" jdbcType="VARCHAR" property="roleDescription" />
	</resultMap>
	<sql id="Base_Column_List">
		role_id, role_name, role_sign, role_description
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
		where role_id = #{roleId,jdbcType=INTEGER}
	</select>
	<select id="selectRolesByUserId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">	
		select
		r.*
		from role r, user_role ur
		where r.role_id = ur.role_id and ur.user_id = #{userId,jdbcType=INTEGER}
	</select>
	<select id="selectLessRolesByUserId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">	
		select
		<include refid="Base_Column_List" />
		from role
		where role_id > (select
    						role_id
    						from user_role
    						where user_id = #{userId,jdbcType=INTEGER});
	</select>
	<select id="selectAllRoles" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
	</select>
	<select id="selectRoleByRoleName" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
		where role_name = #{roleName,jdbcType=VARCHAR}
	</select>
	<select id="selectRoleByRoleSign" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
		where role_sign = #{roleSign,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from role
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.zhongda.detection.web.model.Role">
		insert into role (role_id, role_name, role_sign,
		role_description)
		values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR},
		#{roleSign,jdbcType=VARCHAR},
		#{roleDescription,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.zhongda.detection.web.model.Role" useGeneratedKeys="true" keyProperty="roleId">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="roleSign != null">
				role_sign,
			</if>
			<if test="roleDescription != null">
				role_description,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleSign != null">
				#{roleSign,jdbcType=VARCHAR},
			</if>
			<if test="roleDescription != null">
				#{roleDescription,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zhongda.detection.web.model.Role">
		update role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleSign != null">
				role_sign = #{roleSign,jdbcType=VARCHAR},
			</if>
			<if test="roleDescription != null">
				role_description = #{roleDescription,jdbcType=VARCHAR},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zhongda.detection.web.model.Role">
		update role
		set role_name = #{roleName,jdbcType=VARCHAR},
		role_sign = #{roleSign,jdbcType=VARCHAR},
		role_description = #{roleDescription,jdbcType=VARCHAR}
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>
</mapper>