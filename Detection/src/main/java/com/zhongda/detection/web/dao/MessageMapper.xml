<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhongda.detection.web.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.zhongda.detection.web.model.Message">
    <id column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="sensor_id" jdbcType="INTEGER" property="sensorId" />
    <result column="message_type" jdbcType="VARCHAR" property="messageType" />
    <result column="message_context" jdbcType="VARCHAR" property="messageContext" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    message_id, user_id, sensor_id, message_type, message_context, create_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <select id="selectMessagesByUserIdAndNotRead" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from message
    where user_id = #{userId,jdbcType=INTEGER}
    and status = '未读'
  </select>
  <select id="selectPartMessagesByUserIdAndNotRead" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from message
    where user_id = #{userId,jdbcType=INTEGER}
    and status = '未读' order by create_time desc limit 0,2
  </select>
  <select id="selectMessagesByUserIdAndOther" parameterType="com.zhongda.detection.web.model.Message" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from message
    where user_id = #{userId,jdbcType=INTEGER}
    <if test="messageId != null">
        and message_id = #{messageId,jdbcType=INTEGER}
      </if>
      <if test="messageType != null">
        and message_type = #{messageType,jdbcType=VARCHAR}
      </if>
      <if test="messageContext != null">
        and message_context like #{messageContext,jdbcType=VARCHAR}
      </if>
      <if test="startCreateTime != null">
        and (create_time &gt;= #{startCreateTime,jdbcType=TIMESTAMP})
      </if>
      <if test="endCreateTime != null">
        and (create_time &lt;= #{endCreateTime,jdbcType=TIMESTAMP})
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=VARCHAR}
      </if>
      order by create_time desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhongda.detection.web.model.Message">
    insert into message (message_id, user_id, sensor_id,
      message_type, message_context, create_time,
      status)
    values (#{messageId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{sensorId,jdbcType=INTEGER},
      #{messageType,jdbcType=VARCHAR}, #{messageContext,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhongda.detection.web.model.Message">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        message_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="sensorId != null">
        sensor_id,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="messageContext != null">
        message_context,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="sensorId != null">
        #{sensorId,jdbcType=INTEGER},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=VARCHAR},
      </if>
      <if test="messageContext != null">
        #{messageContext,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhongda.detection.web.model.Message">
    update message
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="sensorId != null">
        sensor_id = #{sensorId,jdbcType=INTEGER},
      </if>
      <if test="messageType != null">
        message_type = #{messageType,jdbcType=VARCHAR},
      </if>
      <if test="messageContext != null">
        message_context = #{messageContext,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhongda.detection.web.model.Message">
    update message
    set user_id = #{userId,jdbcType=INTEGER},
      sensor_id = #{sensorId,jdbcType=INTEGER},
      message_type = #{messageType,jdbcType=VARCHAR},
      message_context = #{messageContext,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>