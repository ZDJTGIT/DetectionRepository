<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhongda.detection.web.dao.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.zhongda.detection.web.model.Project">
    <id column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_type_id" jdbcType="INTEGER" property="projectTypeId" />
    <result column="project_address" jdbcType="VARCHAR" property="projectAddress" />
    <result column="project_longitude" jdbcType="VARCHAR" property="projectLongitude" />
    <result column="project_latitude" jdbcType="VARCHAR" property="projectLatitude" />
    <result column="project_time" jdbcType="TIMESTAMP" property="projectTime" />
    <result column="project_status" jdbcType="VARCHAR" property="projectStatus" />
    <result column="project_description" jdbcType="VARCHAR" property="projectDescription" />
    <association property="sysDictionary" javaType="SysDictionary">
      	<id column="dic_id" jdbcType="INTEGER" property="dicId" />
	    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
	    <result column="type_value" jdbcType="VARCHAR" property="typeValue" />
	    <result column="type_code" jdbcType="INTEGER" property="typeCode" />
	    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
	    <result column="item_value" jdbcType="VARCHAR" property="itemValue" />
   	</association>
  </resultMap>
  <resultMap id="ProjectResultMap" type="com.zhongda.detection.web.model.Project">
    <id column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_type_id" jdbcType="INTEGER" property="projectTypeId" />
    <result column="project_address" jdbcType="VARCHAR" property="projectAddress" />
    <result column="project_longitude" jdbcType="VARCHAR" property="projectLongitude" />
    <result column="project_latitude" jdbcType="VARCHAR" property="projectLatitude" />
    <result column="project_time" jdbcType="TIMESTAMP" property="projectTime" />
    <result column="project_status" jdbcType="VARCHAR" property="projectStatus" />
    <result column="project_description" jdbcType="VARCHAR" property="projectDescription" />
     <result column="message_count" jdbcType="VARCHAR" property="messageCount" />
  </resultMap>
  
  <sql id="Base_Column_List">
    project_id, user_id, project_name, project_type_id, project_address, project_longitude,
	project_latitude, project_time, project_status, project_description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from project
    where project_id = #{projectId,jdbcType=INTEGER}
  </select>
  <select id="selectByProjectName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from project
    where project_name = #{projectName,jdbcType=VARCHAR}
  </select>
  <select id="selectProjectsByUserIdAndProjectType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from project
    where user_id = #{0} and project_type_id = #{1}
  </select>
  <select id="selectAllProject" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from project
  </select>
  <select id="selectProjectByUserIdWithMessageCount" parameterType="java.lang.Integer" resultMap="ProjectResultMap">
  	 select
     p.*,count(pm.message_id) 'message_count'
     from project p LEFT OUTER JOIN project_message pm
     on p.project_id = pm.project_id
     where p.user_id = #{userId,jdbcType=INTEGER}
     GROUP BY p.project_id;
  </select>
  <select id="selectAllProjectWithMessageCount" resultMap="ProjectResultMap">
  	 select
     p.*,count(pm.message_id) 'message_count'
     from project p left outer join project_message pm
	 on p.project_id = pm.project_id
     GROUP BY p.project_id;
  </select>
  <select id="selectProjectAndSysDicByUserId" resultMap="BaseResultMap">
  	select
    p.*,sd.*
    from project p,sys_dictionary sd
    where p.project_type_id = sd.dic_id and user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectProjectByProjectNameAndUserId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" /> 
    from project 
    where 
    project_name = #{0} 
    and 
    user_id = #{1}
  </select>
  <select id="selectLotOfProjectsByProjectId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from project where project_id in
    <foreach item="item" index="index" collection="array" open="(" separator="," close=")">  
	 #{item}  
	</foreach>
  </select>
  <select id="selectAllProjectByKeyWord_mana" parameterType="java.lang.String" resultMap="ProjectResultMap">
     select
     p.*,count(pm.message_id) 'message_count'
     from project p left outer join project_message pm
	 on p.project_id = pm.project_id 
     where project_name like '%${_parameter}%'
     GROUP BY p.project_id;
  </select>
  <select id="selectAllProjectByKeyWord_nomana" parameterType="java.lang.String" resultMap="ProjectResultMap">
  	 select
     p.*,count(pm.message_id) 'message_count'
     from project p LEFT OUTER JOIN project_message pm
     on p.project_id = pm.project_id
     where project_name like '%${_parameter.param1}%'
     and p.user_id = ${_parameter.param2}
     GROUP BY p.project_id;
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where project_id = #{projectId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhongda.detection.web.model.Project">
    insert into project (project_id, user_id, project_name,
      project_type_id, project_address, project_longitude,
      project_latitude, project_time, project_status, project_description)
    values (#{projectId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{projectName,jdbcType=VARCHAR},
      #{projectTypeId,jdbcType=INTEGER}, #{projectAddress,jdbcType=VARCHAR}, #{projectLongitude,jdbcType=VARCHAR},
      #{projectLatitude,jdbcType=VARCHAR}, #{projectTime,jdbcType=TIMESTAMP}, #{projectStatus,jdbcType=VARCHAR}, 
      #{projectDescription,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zhongda.detection.web.model.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="projectTypeId != null">
        project_type_id,
      </if>
      <if test="projectAddress != null">
        project_address,
      </if>
      <if test="projectLongitude != null">
        project_longitude,
      </if>
      <if test="projectLatitude != null">
        project_latitude,
      </if>
      <if test="projectTime != null">
        project_time,
      </if>
      <if test="projectStatus != null">
        project_status,
      </if>
      <if test="projectDescription != null">
        project_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectTypeId != null">
        #{projectTypeId,jdbcType=INTEGER},
      </if>
      <if test="projectAddress != null">
        #{projectAddress,jdbcType=VARCHAR},
      </if>
      <if test="projectLongitude != null">
        #{projectLongitude,jdbcType=VARCHAR},
      </if>
      <if test="projectLatitude != null">
        #{projectLatitude,jdbcType=VARCHAR},
      </if>
      <if test="projectTime != null">
        #{projectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectStatus != null">
        #{projectStatus,jdbcType=VARCHAR},
      </if>
      <if test="projectDescription != null">
        #{projectDescription,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhongda.detection.web.model.Project">
    update project
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectTypeId != null">
        project_type_id = #{projectTypeId,jdbcType=INTEGER},
      </if>
      <if test="projectAddress != null">
        project_address = #{projectAddress,jdbcType=VARCHAR},
      </if>
      <if test="projectLongitude != null">
        project_longitude = #{projectLongitude,jdbcType=VARCHAR},
      </if>
      <if test="projectLatitude != null">
        project_latitude = #{projectLatitude,jdbcType=VARCHAR},
      </if>
      <if test="projectTime != null">
        project_time = #{projectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectStatus != null">
        project_status = #{projectStatus,jdbcType=VARCHAR},
      </if>
      <if test="projectDescription != null">
        project_description = #{projectDescription,jdbcType=VARCHAR},
      </if>
    </set>
    where project_id = #{projectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhongda.detection.web.model.Project">
    update project
    set user_id = #{userId,jdbcType=INTEGER},
      project_name = #{projectName,jdbcType=VARCHAR},
      project_type_id = #{projectTypeId,jdbcType=INTEGER},
      project_address = #{projectAddress,jdbcType=VARCHAR},
      project_longitude = #{projectLongitude,jdbcType=VARCHAR},
      project_latitude = #{projectLatitude,jdbcType=VARCHAR},
      project_time = #{projectTime,jdbcType=TIMESTAMP},
      project_status = #{projectStatus,jdbcType=VARCHAR},
      project_description = #{projectDescription,jdbcType=VARCHAR}
    where project_id = #{projectId,jdbcType=INTEGER}
  </update>
</mapper>